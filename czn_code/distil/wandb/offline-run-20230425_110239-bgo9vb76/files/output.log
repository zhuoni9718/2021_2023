training roberta-base
MultipleChoiceModelOutput(loss=None, logits=tensor([[-0.0536, -0.0544, -0.0547, -0.0516, -0.0542],
        [-0.0477, -0.0487, -0.0493, -0.0480, -0.0487],
        [-0.0559, -0.0540, -0.0558, -0.0568, -0.0553],
        [-0.0439, -0.0450, -0.0460, -0.0457, -0.0452]], device='cuda:0'), hidden_states=None, attentions=None)
Some weights of the model checkpoint at roberta-base were not used when initializing RobertaForMultipleChoice: ['lm_head.layer_norm.weight', 'lm_head.dense.bias', 'lm_head.decoder.weight', 'lm_head.bias', 'lm_head.layer_norm.bias', 'lm_head.dense.weight']
- This IS expected if you are initializing RobertaForMultipleChoice from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForMultipleChoice from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaForMultipleChoice were not initialized from the model checkpoint at roberta-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
//users5/znchen/anaconda3/envs/q2k/lib/python3.10/site-packages/transformers-4.27.0.dev0-py3.10.egg/transformers/optimization.py:391: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
  0% 0/233 [00:01<?, ?it/s]
Traceback (most recent call last):
  File "/users5/znchen/distil/predict_frame.py", line 136, in <module>
    main()
  File "/users5/znchen/distil/predict_frame.py", line 127, in main
    train(args.model_name,args.epochs,args.train_data,args.dev_data)
  File "/users5/znchen/distil/predict_frame.py", line 70, in train
    total_val_loss += loss.item()
AttributeError: 'NoneType' object has no attribute 'item'